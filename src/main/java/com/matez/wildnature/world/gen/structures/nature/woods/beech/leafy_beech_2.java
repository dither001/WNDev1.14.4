package com.matez.wildnature.world.gen.structures.nature.woods.beech;

import com.matez.wildnature.Main;
import com.matez.wildnature.world.gen.structures.nature.SchemFeature;
import com.mojang.datafixers.Dynamic;
import net.minecraft.block.Blocks;
import net.minecraft.util.math.BlockPos;
import net.minecraft.block.BlockState;
import net.minecraft.world.gen.feature.NoFeatureConfig;

import java.util.Set;
import java.util.function.Function;

public class leafy_beech_2 extends SchemFeature {
    public leafy_beech_2(Function<Dynamic<?>, ? extends NoFeatureConfig> config, boolean doBlockNofityOnPlace) {
        super(config, doBlockNofityOnPlace);
        Main.treesList.add(this);
        LEAVES = notDecayingLeaf(Blocks.BIRCH_LEAVES);
    }

    public leafy_beech_2(Function<Dynamic<?>, ? extends NoFeatureConfig> config, boolean doBlockNofityOnPlace, BlockState log, BlockState leaves) {
        super(config, doBlockNofityOnPlace);
        Main.treesList.add(this);
        LOG = log;
        LEAVES =leaves;
    }

    @Override
    public Set<BlockPos> setBlocks() {

Block(0,9,-4,LEAVES);
Block(-1,6,-3,LEAVES);
Block(2,6,-3,LEAVES);
Block(-1,7,-3,LEAVES);
Block(0,7,-3,LEAVES);
Block(1,7,-3,LEAVES);
Block(2,7,-3,LEAVES);
Block(-2,9,-3,LEAVES);
Block(0,9,-3,LEAVES);
Block(1,9,-3,LEAVES);
Block(0,11,-3,LEAVES);
Block(-3,4,-2,LEAVES);
Block(-2,4,-2,LEAVES);
Block(-1,4,-2,LEAVES);
Block(0,4,-2,LEAVES);
Block(1,4,-2,LEAVES);
Block(1,5,-2,LEAVES);
Block(-1,6,-2,LEAVES);
Block(1,6,-2,LEAVES);
Block(2,6,-2,LEAVES);
Block(3,6,-2,LEAVES);
Block(-1,7,-2,LEAVES);
Block(0,7,-2,LEAVES);
Block(1,7,-2,LEAVES);
Block(2,7,-2,LEAVES);
Block(3,7,-2,LEAVES);
Block(-3,9,-2,LEAVES);
Block(-2,9,-2,LEAVES);
Block(-1,9,-2,LEAVES);
Block(0,9,-2,LEAVES);
Block(1,9,-2,LEAVES);
Block(2,9,-2,LEAVES);
Block(-1,10,-2,LEAVES);
Block(-1,11,-2,LEAVES);
Block(0,11,-2,LEAVES);
Block(2,11,-2,LEAVES);
Block(3,11,-2,LEAVES);
Block(0,13,-2,LEAVES);
Block(-3,4,-1,LEAVES);
Block(-1,4,-1,LEAVES);
Block(0,4,-1,LEAVES);
Block(1,4,-1,LEAVES);
Block(2,4,-1,LEAVES);
Block(3,4,-1,LEAVES);
Block(-2,5,-1,LEAVES);
Block(-1,5,-1,LEAVES);
Block(0,5,-1,LEAVES);
Block(-2,7,-1,LEAVES);
Block(-1,7,-1,LEAVES);
Block(0,7,-1,LEAVES);
Block(1,7,-1,LEAVES);
Block(2,7,-1,LEAVES);
Block(-3,9,-1,LEAVES);
Block(-2,9,-1,LEAVES);
Block(-1,9,-1,LEAVES);
Block(0,9,-1,LEAVES);
Block(1,9,-1,LEAVES);
Block(2,9,-1,LEAVES);
Block(-1,10,-1,LEAVES);
Block(-1,11,-1,LEAVES);
Block(0,11,-1,LEAVES);
Block(1,11,-1,LEAVES);
Block(2,11,-1,LEAVES);
Block(3,11,-1,LEAVES);
Block(-1,13,-1,LEAVES);
Block(0,13,-1,LEAVES);
Block(1,13,-1,LEAVES);
Block(0,1,0,"wildnature:beech_log[axis=y]");
Block(0,2,0,"wildnature:beech_log[axis=y]");
Block(0,3,0,"wildnature:beech_log[axis=y]");
Block(3,3,0,LEAVES);
Block(4,3,0,LEAVES);
Block(-4,4,0,LEAVES);
Block(-3,4,0,LEAVES);
Block(-2,4,0,LEAVES);
Block(-1,4,0,LEAVES);
Block(0,4,0,"wildnature:beech_log[axis=y]");
Block(1,4,0,LEAVES);
Block(2,4,0,LEAVES);
Block(3,4,0,LEAVES);
Block(-3,5,0,LEAVES);
Block(-2,5,0,LEAVES);
Block(-1,5,0,LEAVES);
Block(0,5,0,"wildnature:beech_log[axis=y]");
Block(1,5,0,LEAVES);
Block(-2,6,0,LEAVES);
Block(0,6,0,"wildnature:beech_log[axis=y]");
Block(1,6,0,LEAVES);
Block(-2,7,0,LEAVES);
Block(-1,7,0,LEAVES);
Block(0,7,0,"wildnature:beech_log[axis=y]");
Block(1,7,0,LEAVES);
Block(2,7,0,LEAVES);
Block(0,8,0,"wildnature:beech_log[axis=y]");
Block(3,8,0,LEAVES);
Block(-2,9,0,LEAVES);
Block(-1,9,0,LEAVES);
Block(0,9,0,"wildnature:beech_log[axis=y]");
Block(1,9,0,LEAVES);
Block(2,9,0,LEAVES);
Block(-1,10,0,LEAVES);
Block(0,10,0,"wildnature:beech_log[axis=y]");
Block(-1,11,0,LEAVES);
Block(0,11,0,"wildnature:beech_log[axis=y]");
Block(1,11,0,LEAVES);
Block(2,11,0,LEAVES);
Block(0,12,0,"wildnature:beech_log[axis=y]");
Block(-1,13,0,LEAVES);
Block(0,13,0,"wildnature:beech_log[axis=y]");
Block(1,13,0,LEAVES);
Block(0,14,0,LEAVES);
Block(1,14,0,LEAVES);
Block(0,15,0,LEAVES);
Block(3,3,1,LEAVES);
Block(4,3,1,LEAVES);
Block(-2,4,1,LEAVES);
Block(-1,4,1,LEAVES);
Block(0,4,1,LEAVES);
Block(2,4,1,LEAVES);
Block(3,4,1,LEAVES);
Block(4,4,1,LEAVES);
Block(-2,5,1,LEAVES);
Block(-1,6,1,LEAVES);
Block(1,6,1,LEAVES);
Block(-2,7,1,LEAVES);
Block(-1,7,1,LEAVES);
Block(0,7,1,LEAVES);
Block(1,7,1,LEAVES);
Block(2,7,1,LEAVES);
Block(0,8,1,LEAVES);
Block(-2,9,1,LEAVES);
Block(-1,9,1,LEAVES);
Block(0,9,1,LEAVES);
Block(1,9,1,LEAVES);
Block(2,9,1,LEAVES);
Block(-2,11,1,LEAVES);
Block(-1,11,1,LEAVES);
Block(0,11,1,LEAVES);
Block(1,11,1,LEAVES);
Block(2,11,1,LEAVES);
Block(-1,13,1,LEAVES);
Block(0,13,1,LEAVES);
Block(1,13,1,LEAVES);
Block(-1,14,1,LEAVES);
Block(0,14,1,LEAVES);
Block(3,3,2,LEAVES);
Block(-2,4,2,LEAVES);
Block(-1,4,2,LEAVES);
Block(0,4,2,LEAVES);
Block(1,4,2,LEAVES);
Block(2,4,2,LEAVES);
Block(3,4,2,LEAVES);
Block(1,6,2,LEAVES);
Block(-2,7,2,LEAVES);
Block(-1,7,2,LEAVES);
Block(0,7,2,LEAVES);
Block(1,7,2,LEAVES);
Block(2,7,2,LEAVES);
Block(-2,9,2,LEAVES);
Block(-1,9,2,LEAVES);
Block(0,9,2,LEAVES);
Block(1,9,2,LEAVES);
Block(-1,11,2,LEAVES);
Block(0,11,2,LEAVES);
Block(1,11,2,LEAVES);
Block(-3,3,3,LEAVES);
Block(-2,4,3,LEAVES);
Block(-1,4,3,LEAVES);
Block(0,4,3,LEAVES);
Block(1,4,3,LEAVES);
Block(2,4,3,LEAVES);
Block(-2,7,3,LEAVES);
Block(-1,7,3,LEAVES);
Block(0,7,3,LEAVES);
Block(1,7,3,LEAVES);
Block(2,7,3,LEAVES);
Block(0,9,3,LEAVES);
Block(1,9,3,LEAVES);
Block(1,11,3,LEAVES);
Block(-2,3,4,LEAVES);
Block(0,3,4,LEAVES);
Block(1,3,4,LEAVES);
Block(-1,6,4,LEAVES);
Block(0,7,4,LEAVES);
Block(0,9,4,LEAVES);

//   wildnature mod
//           created by matez 
//         all rights reserved   
//     http://bit.ly/wildnature-mod
return super.setBlocks();
    }
}